plugins {
    id "com.katalon.gradle-plugin" version "0.1.2"
}

repositories {
    maven {
        url = uri("https://maven.pkg.github.com/kazurayam/monk-directory-scanner")
        credentials {
            username = project.findProperty('gpr.user')
            password = project.findProperty('gpr.key')
        }
    }
    maven {
        url = uri("https://maven.pkg.github.com/kazurayam/ks-object-repository-garbage-collector")
        credentials {
            username = project.findProperty('gpr.user')
            password = project.findProperty('gpr.key')
        }
    }
}

dependencies {
    implementation('com.kazurayam:monk-directory-scanner:0.1.0')
    implementation('com.kazurayam:ks-object-repository-garbage-collector:0.3.0')
}

def userHome = System.getProperty('user.home')
def rootProjectDir = rootProject.projectDir

tasks.register('cleanDrivers') {
    group = 'Custom'
    description = "remove jars out of the Drivers folder"
    doFirst {
        delete 'Drivers'
        mkdir 'Drivers'
    }
}

tasks.register('importDrivers') {
    group = 'Custom'
    description = "import the KS_ObjectRepositoryGarbageCollector jar and the MockDirectoryScanner jar into the Drivers folder"
    doLast {
        copy {
            into layout.projectDirectory.dir("Drivers")
            from("${rootProject.projectDir}/lib/build/libs") {
                include "${rootProject.name}*.jar"
            }
        }
    }
    doLast {
        copy {
            into layout.projectDirectory.dir("Drivers")
            from("$userHome/.m2/repository/com/kazurayam/monk-directory-scanner/0.1.0") {
                include '**/*.jar'
            }
        }
    }
    dependsOn 'cleanDrivers'
}

katalonCopyDependencies.dependsOn cleanDrivers

tasks.register("cleanProject", Delete) {
    group = 'Custom'
    description = "remove the bin folder and others to clean up the Katalon project"
    delete '.cache'
    delete 'bin'
    delete 'Libs'
}

tasks.register("publishDemoToDocs") {
    group = 'Custom'
    description = "copy the source of the Demo testcases and its outputs into the rootProject/docs folder"
    doFirst {
        delete "$rootProjectDir/docs/assets/testOutput"
        delete "$rootProjectDir/docs/assets/Scripts"
    }
    doLast {
        copy {
            from("build/tmp/testOutput") {
                include "demo/**"
            }
            into "$rootProjectDir/docs/assets/testOutput"
        }
        copy {
            from("Scripts")
            into "$rootProjectDir/docs/assets/Scripts"
        }
    }
}

