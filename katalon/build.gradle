plugins {
    id("com.katalon.gradle-plugin") version "0.1.2"
}

repositories {
    mavenCentral()
}

ext {
    MDSVersion = '0.1.1'
    ORGCVersion = '0.4.6'
}

dependencies {
    implementation('com.kazurayam:monk-directory-scanner:0.1.1')
}

def userHome = System.getProperty('user.home')
def rootProjectDir = rootProject.projectDir

tasks.register('importMonkDirectoryScanner') {
    group = 'Custom'
    description = 'import the MonkDirectoryScanner into the Drivers folder'
    doFirst {
        delete fileTree("Drivers").matching {
            include "*monk-directory-scanner-*.jar"
        }
    }
}
importMonkDirectoryScanner.finalizedBy katalonCopyDependencies

tasks.register('importLibArtifact') {
    group = 'Custom'
    description = "import the KS_ObjectRepositoryGarbageCollector jar and the MockDirectoryScanner jar into the Drivers folder"
    doFirst {
        delete fileTree("Drivers").matching {
            include "ks-object-repository-garbage-collector-*.jar"
        }
    }
    doLast {
        copy {
            into layout.projectDirectory.dir("Drivers")
            from("${rootProject.projectDir}/lib/build/libs") {
                include "ks-object-repository-garbage-collector-${ORGCVersion}*.jar"
            }
        }
    }
}

tasks.register('importDrivers') {
    group = 'Custom'
    description = 'run importLibArtifact and importMonDirectoryScanner'
    dependsOn importLibArtifact, importMonkDirectoryScanner
}

tasks.register("cleanProject", Delete) {
    group = 'Custom'
    description = "remove the bin folder and others to clean up the Katalon project"
    delete '.cache'
    delete 'bin'
    delete 'Libs'
}

tasks.register("publishDemoToDocs") {
    group = 'Custom'
    description = "copy the source of the Demo testcases and its outputs into the rootProject/docs folder"
    doFirst {
        delete "$rootProjectDir/docs/assets/testOutput"
        delete "$rootProjectDir/docs/assets/Scripts"
    }
    doLast {
        copy {
            from("build/tmp/testOutput") {
                include "demo/**"
            }
            into "$rootProjectDir/docs/assets/testOutput"
        }
        copy {
            from("Scripts")
            into "$rootProjectDir/docs/assets/Scripts"
        }
    }
}

